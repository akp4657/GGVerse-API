generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Discord_Threads {
  id         Int      @id(map: "Discord_Threads_pkey1") @default(autoincrement())
  ThreadId   String   @db.VarChar
  Members    Int[]
  Open       Boolean  @default(true)
  Dispute    Boolean  @default(false)
  created_at DateTime @default(now()) @db.Timestamptz(6)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Lookup_Badge {
  id          Int      @id @default(autoincrement())
  Badge       String?  @db.VarChar
  Description String?
  created_at  DateTime @default(now()) @db.Timestamptz(6)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Lookup_Game {
  id            Int             @id(map: "Lookup_Games_pkey") @default(autoincrement())
  Game          String?
  API           String?         @db.VarChar
  created_at    DateTime        @default(now()) @db.Timestamptz(6)
  Match_History Match_History[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Lookup_PaymentType {
  id         Int      @id @default(autoincrement())
  Type       String?
  created_at DateTime @default(now()) @db.Timestamptz(6)
  Users      Users[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Lookup_Status {
  id            Int             @id @default(autoincrement())
  Status        String?
  created_at    DateTime        @default(now()) @db.Timestamptz(6)
  Match_History Match_History[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Match_History {
  id            Int            @id(map: "Discord_Threads_pkey") @default(autoincrement())
  Game          Int?
  P1            String?        @db.VarChar
  P2            String?        @db.VarChar
  Status        Int?
  Result        Boolean?
  created_at    DateTime       @default(now()) @db.Timestamptz(6)
  Lookup_Game   Lookup_Game?   @relation(fields: [Game], references: [id], onDelete: Cascade)
  Lookup_Status Lookup_Status? @relation(fields: [Status], references: [id], onDelete: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Users {
  id                 Int                @id(map: "Test-User-Table_pkey") @default(autoincrement())
  Username           String?
  Rank               Int?
  Wallet             Decimal            @default(0) @db.Decimal
  PaymentType        Int                @default(1)
  PayPalPayerId      String?            @db.VarChar
  BillingAgreementId String?            @db.VarChar
  CardLast           Decimal?           @db.Decimal
  CardBrand          String?            @db.VarChar
  CardExpMonth       Decimal?           @db.Decimal
  CardExpYear        Decimal?           @db.Decimal
  Rivals             Int[]
  Badges             Int[]
  Discord            String?            @db.VarChar
  Avatar             String?            @db.VarChar
  Authenticated      Boolean            @default(false)
  Password           String?            @db.VarChar
  Email              String?            @unique @db.VarChar
  WinsLosses         Json?              @db.Json
  Streak             Int?               @default(0)
  Earnings           Decimal?           @db.Decimal
  JWT                String?            @db.VarChar
  StripePayerId      String?            @db.VarChar
  Lookup_PaymentType Lookup_PaymentType @relation(fields: [PaymentType], references: [id], onDelete: SetDefault)
  Transactions       Transaction[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Transaction {
  id                    Int      @id @default(autoincrement())
  UserId                Int
  Type                  String   @db.VarChar // 'deposit', 'withdrawal', 'transfer', 'game_payout', etc.
  Amount                Decimal  @db.Decimal
  Currency              String   @default("USD") @db.VarChar
  Description           String?  @db.VarChar
  StripePaymentIntentId String?  @db.VarChar
  StripePayoutId        String?  @db.VarChar
  Status                String   @default("completed") @db.VarChar // 'pending', 'completed', 'failed'
  created_at            DateTime @default(now()) @db.Timestamptz(6)
  Users                 Users    @relation(fields: [UserId], references: [id], onDelete: Cascade)
}
